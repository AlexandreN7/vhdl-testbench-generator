--Testbench generated by Alexandre P testbench generator ;))
library IEEE;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity adder_tb is
    end adder_tb;

architecture simulate of adder_tb is

    component adder
        Generic (
                    N : positive range 0 to 16
                );
        Port(
                clk : in std_logic;
                clk_sys : in std_logic;
                rst_n : in std_logic_vector(20 downto 0);
                a : in std_logic;
                patate : in ahb_mst;
                cin : in std_logic;
                sum : out std_logic
            );
    end component;

--Internal signals
    signal s_clk : std_logic;
    signal s_clk_sys : std_logic;
    signal s_rst_n : std_logic_vector(20 downto 0);
    signal s_a : std_logic;
    signal s_patate : ahb_mst;
    signal s_cin : std_logic;
    signal s_sum : std_logic;

    signal s_N : positive range 0 to 16;

    constant clk_period : time := 15 ns;
    constant clk_sys_period : time := 500 ns;

begin

    uut :adder
    Generic map(
                   N => s_N
               )
    Port map(
                clk => s_clk,
                clk_sys => s_clk_sys,
                rst_n => s_rst_n,
                a => s_a,
                patate => s_patate,
                cin => s_cin,
                sum => s_sum
            );

--Stimulus process
    stimulus : process
    begin
        wait for 1000 ns;
        s_clk <= '0';
        s_clk_sys <= '0';
        s_rst_n <= (others => '0');
        s_a <= '0';
        s_patate <= '0';
        s_cin <= '0';
        wait for 1000 ns;
        s_rst_n <= '1';
        --Code here
        wait;
    end process;

--Clock process definiton
    clk_process : process
    begin
        s_clk <= '0';
        wait for clk_period/2;
        s_clk <= '1';
        wait for clk_period/2;
    end process;

    clk_sys_process : process
    begin
        s_clk_sys <= '0';
        wait for clk_sys_period/2;
        s_clk_sys <= '1';
        wait for clk_sys_period/2;
    end process;

end;
